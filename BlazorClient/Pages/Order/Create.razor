@page "/Order/Crete"

@inject HttpClient Http
@inject NavigationManager navManager

@if (string.IsNullOrEmpty(errorString) == false)
{
    <h5>System Error</h5>
    <p>@errorString</p>
}
else
{

}


@code{
    private OrderModel order = new OrderModel();
    private List<FoodModel> foodItems = new List<FoodModel>();
    private string errorString;

    protected override async Task OnParametersSetAsync()
    {
        HttpResponseMessage response = await Http.GetAsync("api/food");

        if (response.IsSuccessStatusCode)
        {
            foodItems = await response.Content.ReadFromJsonAsync<List<FoodModel>>();
        }
        else
        {
            errorString = response.ReasonPhrase;
        }
    }

    private void FoodItemChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {
            order.FoodId = int.Parse(e.Value.ToString());
        }
    }

    private async Task HandleValidSubmit()
    {
        order.Total = order.Quantity * foodItems.Where(x => x.Id == order.FoodId).FirstOrDefault().Price;

        var response = await Http.PostAsJsonAsync("api/order", order);
    }
} 